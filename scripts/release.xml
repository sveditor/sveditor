<project name="release" default="release">

	<property environment="env"/>

	<!-- Import the version info -->
	<property file="${basedir}/../etc/sveditor.info"/>
    <property file="${basedir}/../etc/sveditor_${version_type}.info"/>
	<property file="${basedir}/build.properties"/>
	
	<condition property="is_release">
		<equals arg1="${version_type}" arg2="release"/>
	</condition>

	<property name="sf_frs_url" value="${env.SF_USERNAME},sveditor@frs.sourceforge.net"/>
	<property name="sf_web_url" value="${env.SF_USERNAME},sveditor@web.sourceforge.net"/>

	<property name="sf_update_url" value="${env.SF_USERNAME},sveditor@web.sourceforge.net:htdocs/${web_update_dir}"/>

	<!--
	<property name="sf_update_url" 
         value="${env.SF_USERNAME},sveditor@web.sourceforge.net:htdocs/update"/>
      -->

	<property name="rlsdir" value="${basedir}/../release"/>
	<property name="srcdir" value="${basedir}/../sveditor"/>
	<property name="feature.version" value="${version}"/>
	<property name="buildDirectory"   value="${basedir}/../build"/>
	<property name="buildResult"      value="${basedir}/../buildResult"/>

	<target name="release" depends="release-prereqs, upload_release">
		<!-- remove release dir once complete -->
		<delete dir="${basedir}/../release"/>
	</target>

	<target name="release-prereqs" depends="build, mksrc, mk_rn">
		<mkdir dir="${rlsdir}"/>

		<unzip src="${buildResult}/sveditor-release-${feature.version}.zip"
			dest="${rlsdir}"/>
       
<!--
		<delete dir="${rlsdir}"/> 
		<delete dir="${buildDirectory}"/>
 -->
	</target>

	<target name="release_core" depends="mksrc, mk_rn">
		<mkdir dir="${rlsdir}"/>

		<unzip src="${buildResult}/sveditor-release-${feature.version}.zip"
			dest="${rlsdir}"/>
		<antcall target="upload_release"/>
	</target>

	<property name="bintray_id" value="-u${env.BINTRAY_USERNAME}:${env.BINTRAY_API_KEY}"/>
	<property name="bintray_update_url" value="https://api.bintray.com/content/mballance/sveditor/update/${feature.version}/${feature.version}"/>
	<property name="bintray_release_url" value="https://api.bintray.com/content/mballance/sveditor/release/${feature.version}/${feature.version}"/>
	
	<macrodef name="bintray_upload_update">
		<attribute name="path"/>
		<sequential>
			<exec executable="curl" dir="${rlsdir}" failonerror="true">
				<arg value="-T"/>
				<arg value="@{path}"/>
				<arg value="${bintray_id}"/>
				<arg value="${bintray_update_url}/@{path}"/>
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="bintray_upload_release">
		<attribute name="path"/>
		<sequential>
			<exec executable="curl" dir="${buildResult}" failonerror="true">
				<arg value="-T"/>
				<arg value="@{path}"/>
				<arg value="${bintray_id}"/>
				<arg value="${bintray_release_url}/@{path}"/>
			</exec>
		</sequential>
	</macrodef>
	<macrodef name="bintray_upload_release_rlsdir">
		<attribute name="path"/>
		<sequential>
			<exec executable="curl" dir="${rlsdir}" failonerror="true">
				<arg value="-T"/>
				<arg value="@{path}"/>
				<arg value="${bintray_id}"/>
				<arg value="${bintray_release_url}/@{path}"/>
			</exec>
		</sequential>
	</macrodef>
					
	<target name="upload_release">
		<tempfile property="sftp_cmds"/>
		<bintray_upload_update path="features/net.sf.sveditor.core.feature_${feature.version}.jar"/>
		<bintray_upload_update path="features/net.sf.sveditor.ui.feature_${feature.version}.jar"/>
		<bintray_upload_update path="features/net.sf.sveditor_${feature.version}.jar"/>

		<bintray_upload_update path="plugins/net.sf.sveditor.batch.core_${feature.version}.jar"/>
<!-- not planned for Eclipse HDT
		<bintray_upload_update path="plugins/net.sf.sveditor.svt.core_${feature.version}.jar"/>
-->
		<bintray_upload_update path="plugins/net.sf.sveditor.batch.ui_${feature.version}.jar"/>
<!-- not planned for Eclipse HDT
		<bintray_upload_update path="plugins/net.sf.sveditor.svt.editor_${feature.version}.jar"/>
		<bintray_upload_update path="plugins/net.sf.sveditor.core.uvm.templates_${feature.version}.jar"/>
		<bintray_upload_update path="plugins/net.sf.sveditor.svt.ui_${feature.version}.jar"/>
-->
		<bintray_upload_update path="plugins/net.sf.sveditor.core_${feature.version}.jar"/>
		<bintray_upload_update path="plugins/net.sf.sveditor.ui_${feature.version}.jar"/>
		<bintray_upload_update path="plugins/net.sf.sveditor.doc.dev_${feature.version}.jar"/>
<!-- not planned for Eclipse HDT
		<bintray_upload_update path="plugins/net.sf.sveditor.vhdl.core_${feature.version}.jar"/>
-->
		<bintray_upload_update path="plugins/net.sf.sveditor.doc.user_${feature.version}.jar"/>
<!-- not planned for Eclipse HDT
		<bintray_upload_update path="plugins/net.sf.sveditor.vhdl.ui_${feature.version}.jar"/>
-->
		<bintray_upload_update path="plugins/net.sf.sveditor.extjar_${feature.version}.jar"/>
		
		<!-- First, create appropriate directories -->
		<!--
		<echo file="${sftp_cmds}">
                cd ${sveditor_dir}
                -mkdir ${frs_update_site_dir}
                cd ${frs_update_site_dir}
                -mkdir ${feature.version}
                cd ${feature.version}
                -mkdir plugins
                -mkdir features
                cd ${sveditor_dir}/sveditor
                -mkdir ${feature.version}
		</echo>
		-->
		<echo file="${sftp_cmds}">
                cd ${sveditor_dir}/sveditor
                -mkdir ${feature.version}
		</echo>

		<exec executable="sftp">
                    <arg value="-b"/>
                    <arg value="${sftp_cmds}"/>
                    <arg value="${sf_frs_url}"/>
                </exec>
		<!--
		<delete file="${sftp_cmds}"/>
		-->

		<!-- Now, copy the release files into the update site -->
		<!--
		<echo file="${sftp_cmds}">
			put *.jar
		</echo>
		<exec executable="sftp" dir="${rlsdir}/features">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/${frs_update_site_dir}/${feature.version}/features"/>
		</exec>

		<echo file="${sftp_cmds}">
			put *.jar
		</echo>
		<exec executable="sftp" dir="${rlsdir}/plugins">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/${frs_update_site_dir}/${feature.version}/plugins"/>
		</exec>
		-->

		<!-- Now, copy the release archive (only if in release mode) -->
		<antcall target="upload_release_files"/>

		<!-- Finally, update the SVEditor Update Site -->
		<echo file="${sftp_cmds}">
			-mkdir ${web_update_dir}
			cd ${web_update_dir}
			put content.jar
			put artifacts.jar
		</echo>
		<exec executable="sftp" dir="${rlsdir}">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_web_url}:htdocs"/>
		</exec>
		
		<!-- Trigger publishing of the files -->
		<echo message="== Publishing Update on Bintray"/>
		<exec executable="curl" failonerror="true">
			<arg value="-X"/>
			<arg value="POST"/>
			<arg value="${bintray_id}"/>
			<arg value="https://api.bintray.com/content/mballance/sveditor/update/${feature.version}/publish"/>
		</exec>
		
		<delete file="${sftp_cmds}"/>
	</target>
	
	<target name="upload_release_files" if="is_release">
		<!-- Now, copy the release archive (only if in release mode) -->
		<echo file="${sftp_cmds}">
			put sveditor-${feature.version}.jar
		</echo>
		<exec executable="sftp" dir="${buildResult}" failonerror="true">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>
		<bintray_upload_release path="sveditor-${feature.version}.jar"/>

		<echo file="${sftp_cmds}">
			put sveditor-src-${feature.version}.zip
		</echo>
		<exec executable="sftp" dir="${buildResult}" failonerror="true">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>
		<bintray_upload_release path="sveditor-src-${feature.version}.zip"/>

		<echo file="${sftp_cmds}">
			put rn.txt
		</echo>
		<exec executable="sftp" dir="${rlsdir}" failonerror="true">
			<arg value="-b"/>
			<arg value="${sftp_cmds}"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>		
		<bintray_upload_release_rlsdir path="rn.txt"/>
		
		<!-- Trigger publishing of the files -->
		<echo message="== Publishing Release on Bintray"/>
		<exec executable="curl" failonerror="true">
			<arg value="-X"/>
			<arg value="POST"/>
			<arg value="${bintray_id}"/>
			<arg value="https://api.bintray.com/content/mballance/sveditor/release/${feature.version}/publish"/>
		</exec>
	</target>

	<target name="mk_rn">
		<mkdir dir="${rlsdir}"/>
		<exec executable="perl" output="${rlsdir}/rn.txt">
			<arg value="${basedir}/mk_rn.pl"/>
			<arg value="${feature.version}"/>
			<arg value="${basedir}/../ChangeLog.txt"/>
		</exec>
	</target>

<!--
	<target name="mkupdate" depends="build">
		<mkdir dir="${rlsdir}/update_site"/>

		<unzip src="${basedir}/../sveditor-${feature.version}.jar"
			dest="${rlsdir}/update_site"/>
	</target>
  -->

	<target name="build">
		<delete dir="${buildResult}"/>
		<ant antfile="${basedir}/build.xml" dir="${basedir}" target="build"/>
	</target>

	<target name="mksrc">
		<mkdir dir="${buildResult}/sveditor-src-${feature.version}"/>
		<copy todir="${buildResult}/sveditor-src-${feature.version}">
			<fileset dir="${basedir}/..">
				<include name="sveditor/**"/>
				<include name="sve/**"/>
				<include name="etc/**"/>
				<include name="ChangeLog.txt"/>
				<include name="scripts/**"/>
				<exclude name="**/.git/**"/>
				<exclude name="**/bin/**"/>
				<exclude name="**/class/**"/>
			</fileset>
		</copy>
		<delete includeemptydirs="true">
			<fileset dir="${buildResult}/sveditor-src-${feature.version}">
				<include name="**/.git/**"/>
				<include name="**/bin/**"/>
				<include name="**/class/**"/>
			</fileset>
		</delete>
		<zip destfile="${buildResult}/sveditor-src-${feature.version}.zip"
			basedir="${buildResult}">
			<include name="sveditor-src-${feature.version}/**"/>
		</zip>
		<delete dir="${buildResult}/sveditor-src-${feature.version}"/>
	</target>

</project>


